Base_Type ->
	  char
	| unsigned char
	| signed char
	| short
	| unsigned short
	| signed short
	| int
	| unsigned int
	| signed int
	| long
	| unsigned long
	| signed long
	| long long
	| unsigned long long
	| signed long long
	| void
Name -> [a-zA-Z_]+
Type ->
	  Base_Type
	| Base_Type\*
Named_Type ->
Int -> [0-9]+
Number -> [0][.] Int (e Int)?
Single_Char ->
	  [^\"]
	| \\\\
	| \\\"
String -> "Single_Char*"
Expression ->
	  Number
	| String
	| Expression Infix Expression
	| Prefix Expression
	| Name(Arglist?)
	| (Expression)
Statement ->
	  Expression;
	| if(Expression) Block
	| if(Expression) Block else Block
	| while(Expression) Block
	| do Block while(Expression)
	| for(Expression;Expression;Expression) Block
	| Block
Block ->
	  Statement
	| \{ Statement? \}
Function -> Type Name(Arglist?) { Code }
Mains ->
	  int main()
	| int main(int argc,char \*argv[])
	| int main(int argc,char \*\*argv)
C -> Function* Mains { Code }